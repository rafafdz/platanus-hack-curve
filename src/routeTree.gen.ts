/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as EventSlugImport } from './routes/event.$slug'
import { Route as AuthedNewImport } from './routes/_authed.new'
import { Route as AuthedAdminIndexImport } from './routes/_authed.admin/index'
import { Route as AuthedAdminIdImport } from './routes/_authed.admin/$id'
import { Route as AuthedAdminIdIndexImport } from './routes/_authed.admin/$id.index'
import { Route as AuthedAdminIdTeamsImport } from './routes/_authed.admin/$id.teams'
import { Route as AuthedAdminIdAnnouncementsImport } from './routes/_authed.admin/$id.announcements'
import { Route as AuthedAdminIdActivitiesImport } from './routes/_authed.admin/$id.activities'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EventSlugRoute = EventSlugImport.update({
  id: '/event/$slug',
  path: '/event/$slug',
  getParentRoute: () => rootRoute,
} as any)

const AuthedNewRoute = AuthedNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminIndexRoute = AuthedAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminIdRoute = AuthedAdminIdImport.update({
  id: '/admin/$id',
  path: '/admin/$id',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminIdIndexRoute = AuthedAdminIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedAdminIdRoute,
} as any)

const AuthedAdminIdTeamsRoute = AuthedAdminIdTeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AuthedAdminIdRoute,
} as any)

const AuthedAdminIdAnnouncementsRoute = AuthedAdminIdAnnouncementsImport.update(
  {
    id: '/announcements',
    path: '/announcements',
    getParentRoute: () => AuthedAdminIdRoute,
  } as any,
)

const AuthedAdminIdActivitiesRoute = AuthedAdminIdActivitiesImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => AuthedAdminIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/new': {
      id: '/_authed/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof AuthedNewImport
      parentRoute: typeof AuthedImport
    }
    '/event/$slug': {
      id: '/event/$slug'
      path: '/event/$slug'
      fullPath: '/event/$slug'
      preLoaderRoute: typeof EventSlugImport
      parentRoute: typeof rootRoute
    }
    '/_authed/admin/$id': {
      id: '/_authed/admin/$id'
      path: '/admin/$id'
      fullPath: '/admin/$id'
      preLoaderRoute: typeof AuthedAdminIdImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/': {
      id: '/_authed/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthedAdminIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/$id/activities': {
      id: '/_authed/admin/$id/activities'
      path: '/activities'
      fullPath: '/admin/$id/activities'
      preLoaderRoute: typeof AuthedAdminIdActivitiesImport
      parentRoute: typeof AuthedAdminIdImport
    }
    '/_authed/admin/$id/announcements': {
      id: '/_authed/admin/$id/announcements'
      path: '/announcements'
      fullPath: '/admin/$id/announcements'
      preLoaderRoute: typeof AuthedAdminIdAnnouncementsImport
      parentRoute: typeof AuthedAdminIdImport
    }
    '/_authed/admin/$id/teams': {
      id: '/_authed/admin/$id/teams'
      path: '/teams'
      fullPath: '/admin/$id/teams'
      preLoaderRoute: typeof AuthedAdminIdTeamsImport
      parentRoute: typeof AuthedAdminIdImport
    }
    '/_authed/admin/$id/': {
      id: '/_authed/admin/$id/'
      path: '/'
      fullPath: '/admin/$id/'
      preLoaderRoute: typeof AuthedAdminIdIndexImport
      parentRoute: typeof AuthedAdminIdImport
    }
  }
}

// Create and export the route tree

interface AuthedAdminIdRouteChildren {
  AuthedAdminIdActivitiesRoute: typeof AuthedAdminIdActivitiesRoute
  AuthedAdminIdAnnouncementsRoute: typeof AuthedAdminIdAnnouncementsRoute
  AuthedAdminIdTeamsRoute: typeof AuthedAdminIdTeamsRoute
  AuthedAdminIdIndexRoute: typeof AuthedAdminIdIndexRoute
}

const AuthedAdminIdRouteChildren: AuthedAdminIdRouteChildren = {
  AuthedAdminIdActivitiesRoute: AuthedAdminIdActivitiesRoute,
  AuthedAdminIdAnnouncementsRoute: AuthedAdminIdAnnouncementsRoute,
  AuthedAdminIdTeamsRoute: AuthedAdminIdTeamsRoute,
  AuthedAdminIdIndexRoute: AuthedAdminIdIndexRoute,
}

const AuthedAdminIdRouteWithChildren = AuthedAdminIdRoute._addFileChildren(
  AuthedAdminIdRouteChildren,
)

interface AuthedRouteChildren {
  AuthedNewRoute: typeof AuthedNewRoute
  AuthedAdminIdRoute: typeof AuthedAdminIdRouteWithChildren
  AuthedAdminIndexRoute: typeof AuthedAdminIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedNewRoute: AuthedNewRoute,
  AuthedAdminIdRoute: AuthedAdminIdRouteWithChildren,
  AuthedAdminIndexRoute: AuthedAdminIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/new': typeof AuthedNewRoute
  '/event/$slug': typeof EventSlugRoute
  '/admin/$id': typeof AuthedAdminIdRouteWithChildren
  '/admin': typeof AuthedAdminIndexRoute
  '/admin/$id/activities': typeof AuthedAdminIdActivitiesRoute
  '/admin/$id/announcements': typeof AuthedAdminIdAnnouncementsRoute
  '/admin/$id/teams': typeof AuthedAdminIdTeamsRoute
  '/admin/$id/': typeof AuthedAdminIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/new': typeof AuthedNewRoute
  '/event/$slug': typeof EventSlugRoute
  '/admin': typeof AuthedAdminIndexRoute
  '/admin/$id/activities': typeof AuthedAdminIdActivitiesRoute
  '/admin/$id/announcements': typeof AuthedAdminIdAnnouncementsRoute
  '/admin/$id/teams': typeof AuthedAdminIdTeamsRoute
  '/admin/$id': typeof AuthedAdminIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/new': typeof AuthedNewRoute
  '/event/$slug': typeof EventSlugRoute
  '/_authed/admin/$id': typeof AuthedAdminIdRouteWithChildren
  '/_authed/admin/': typeof AuthedAdminIndexRoute
  '/_authed/admin/$id/activities': typeof AuthedAdminIdActivitiesRoute
  '/_authed/admin/$id/announcements': typeof AuthedAdminIdAnnouncementsRoute
  '/_authed/admin/$id/teams': typeof AuthedAdminIdTeamsRoute
  '/_authed/admin/$id/': typeof AuthedAdminIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/new'
    | '/event/$slug'
    | '/admin/$id'
    | '/admin'
    | '/admin/$id/activities'
    | '/admin/$id/announcements'
    | '/admin/$id/teams'
    | '/admin/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/new'
    | '/event/$slug'
    | '/admin'
    | '/admin/$id/activities'
    | '/admin/$id/announcements'
    | '/admin/$id/teams'
    | '/admin/$id'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/new'
    | '/event/$slug'
    | '/_authed/admin/$id'
    | '/_authed/admin/'
    | '/_authed/admin/$id/activities'
    | '/_authed/admin/$id/announcements'
    | '/_authed/admin/$id/teams'
    | '/_authed/admin/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  EventSlugRoute: typeof EventSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  EventSlugRoute: EventSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/event/$slug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/new",
        "/_authed/admin/$id",
        "/_authed/admin/"
      ]
    },
    "/_authed/new": {
      "filePath": "_authed.new.tsx",
      "parent": "/_authed"
    },
    "/event/$slug": {
      "filePath": "event.$slug.tsx"
    },
    "/_authed/admin/$id": {
      "filePath": "_authed.admin/$id.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/admin/$id/activities",
        "/_authed/admin/$id/announcements",
        "/_authed/admin/$id/teams",
        "/_authed/admin/$id/"
      ]
    },
    "/_authed/admin/": {
      "filePath": "_authed.admin/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/$id/activities": {
      "filePath": "_authed.admin/$id.activities.tsx",
      "parent": "/_authed/admin/$id"
    },
    "/_authed/admin/$id/announcements": {
      "filePath": "_authed.admin/$id.announcements.tsx",
      "parent": "/_authed/admin/$id"
    },
    "/_authed/admin/$id/teams": {
      "filePath": "_authed.admin/$id.teams.tsx",
      "parent": "/_authed/admin/$id"
    },
    "/_authed/admin/$id/": {
      "filePath": "_authed.admin/$id.index.tsx",
      "parent": "/_authed/admin/$id"
    }
  }
}
ROUTE_MANIFEST_END */
